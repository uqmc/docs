# Architecture

*Ever heard of the flying spaghetti monster?*

> Really the work right now is turning a giant ball of spaghetti with a thousand loose ends and trying to connect them all together in a beautiful way that lets you understand the spaghetti and so the spaghetti can harmonise with itself and keep itself in sync with more updated spaghetti

![Flying Spaghetti Monster](https://wallpaperset.com/w/full/f/3/5/95007.jpg)

This is what working on a full-stack project like this feels like. We need to document this project in such a way that even for a single person wrangling the ends of the spaghetti, we feel in control.

_UQMC Home-Brew Service Architecture_
![Architectural diagram](https://i.imgur.com/HIyCW0q.png)

## Primary frontend (codename: Arapiles)

Arapiles is the front-end server for `uqmc.org`. Its purpose is to provide content, display copy, and update users on the goings-on for the club. It is serviced by the custom backend Girraween and the Strapi backend (with Grampians custom plugin) to provide functionality.

Users are also expected to go here in order to learn about the requirements to obtain _tapes_. 

[Arapiles docs](#arapiles)    

## Primary backend (codename: Girraween)

The primary backend is designed to provide a bit of extra functionality that does not rely on the functionality or content of the CMS. It allows us to access endpoints in other services (such as KP) under a unified backend URI.

[Girraween docs](#girraween)    

## CMS / backend plugin (codename: Grampians)

The CMS we use is an instance of the open-source Strapi project. Grampians is a plugin to provide extra functionality to Strapi. Such functionality includes API endpoints for sending emails, accessing CMS data in a more custom way, scheduling cron-jobs and more. 

[Grampians docs](#grampians)    

## Rain forecaster (codename: Tibrogargan)

A simple service which will return rain forecast data for given dates from the BOM. The intention is to be used in compliment with events scheduling and visualisation in order to get an idea of rain probability without seeking out the data manually.

Perhaps we can also have weather alerts setup for execs when predictions change past a threshold.

[Tibrogargan docs](#tibrogargan)    
